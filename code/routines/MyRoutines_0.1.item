package routines;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class MyRoutines {
    /**
     * normalise second column 
     * 
     * 
     * {talendTypes} String
     * 
     * {Category} User Defined
     * 
     */

    static java.util.Map<Object, java.util.Map<String, String>> map 
        = new java.util.HashMap<Object, java.util.Map<String, String>>();

    public static String getItemValue(Object listKey, String item, String values) {
    	java.util.Map<String, String> listMap = map.get(listKey);
    	
    	if (listMap == null) {
    		listMap = new java.util.HashMap<String, String>();
    		map.put(listKey, listMap);
    	}

    	String value = listMap.get(item);
    	
    	if (value == null) {
            String[] array = values.split(",");            

            for (int i = 0; i < array.length; i++) {
                value = array[i];

                if (!listMap.containsValue(value)) {
                    listMap.put(item, value);
                    break;
                }
            }
        }        

        return value;
    }
}

