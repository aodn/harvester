<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <changeSet author="talend" id="survey_metadata_table">
      <sql>
        CREATE TABLE survey_metadata
        (
          id bigserial PRIMARY KEY,
          file_id bigint UNIQUE NOT NULL,
          location text NOT NULL,
          survey_date date NOT NULL,
          source text,
          name text,
          coll_Name text,
          authority text,
          habitat text,
          comments text,
          coll_date text,
          status text,
          xyz_file text,
          vessel text,
          z_datum text,
          z_app text,
          z_tech text,
          geom geometry(Geometry,4326) CHECK (st_isvalid(geom)),

          CONSTRAINT survey_metadata_file_fk FOREIGN KEY (file_id)
              REFERENCES indexed_file (id) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE
        );

        CREATE INDEX survey_metadata_gist_idx ON survey_metadata USING GIST (geom); 
      </sql>
    </changeSet>


    <changeSet author="talend" id="survey_metadata_rename">
      <sql>
        ALTER TABLE survey_metadata RENAME TO multibeam_survey ;

        ALTER TABLE multibeam_survey
          RENAME CONSTRAINT survey_metadata_pkey TO multibeam_survey_pkey ;
        ALTER TABLE multibeam_survey
          RENAME CONSTRAINT survey_metadata_file_id_key TO multibeam_survey_file_id_key ;
        ALTER TABLE multibeam_survey
          RENAME CONSTRAINT survey_metadata_file_fk TO multibeam_survey_file_fk ;
        ALTER TABLE multibeam_survey
          RENAME CONSTRAINT survey_metadata_geom_check TO multibeam_survey_goem_check ;

        ALTER INDEX survey_metadata_gist_idx RENAME TO multibeam_survey_gist_idx ;
      </sql>
    </changeSet>


    <changeSet author="talend" id="multibeam_survey_update_columns">
      <sql>
        DROP VIEW IF EXISTS aodn_nsw_oeh_bathy_map ;
        DROP VIEW IF EXISTS aodn_nsw_oeh_multibeam_map ;

        ALTER TABLE multibeam_survey
          DROP COLUMN name,
          DROP COLUMN coll_Name,
          DROP COLUMN habitat,
          ADD COLUMN area text,
          ADD COLUMN areainfo text,
          ADD COLUMN area_ha double precision,
          ADD COLUMN xya_file text,
          ADD COLUMN survey text,
          ADD COLUMN max_res text,
          ADD COLUMN process text;

        ALTER TABLE multibeam_survey RENAME COLUMN comments TO comment;

        ALTER TABLE multibeam_survey RENAME COLUMN z_app TO z_acc;
      </sql>
    </changeSet>


    <changeSet author="talend" id="multibeam_survey_add_constraints">
      <sql>
        ALTER TABLE multibeam_survey
          ADD CONSTRAINT multibeam_survey_location_date_key UNIQUE (location, survey_date),
          ALTER COLUMN geom SET NOT NULL;
      </sql>
    </changeSet>


    <changeSet author="talend" id="singlebeam_survey_table">
      <sql>
        CREATE TABLE singlebeam_survey
        (
          id bigserial PRIMARY KEY,
          file_id bigint UNIQUE NOT NULL,
          location text NOT NULL,
          survey_date date NOT NULL,
          source text,
          source_xyz text,
          area double precision,
          category text,
          est_no text,
          point_num bigint,
          point_dens double precision,
          comments text,
          location_name text,
          sdate text,
          geom geometry(Geometry,4326) CHECK (st_isvalid(geom)) NOT NULL,

          CONSTRAINT singlebeam_survey_file_fk FOREIGN KEY (file_id)
              REFERENCES indexed_file (id) MATCH SIMPLE
              ON UPDATE CASCADE ON DELETE CASCADE,

          CONSTRAINT singlebeam_survey_location_date_key UNIQUE (location, survey_date)
        );

        CREATE INDEX singlebeam_survey_gist_idx ON singlebeam_survey USING GIST (geom);
      </sql>
    </changeSet>


    <changeSet author="talend" id="aodn_nsw_oeh_multibeam_map" runOnChange="true">
      <sql>
        DROP VIEW IF EXISTS aodn_nsw_oeh_multibeam_map CASCADE ;

        CREATE VIEW aodn_nsw_oeh_multibeam_map AS
          WITH files AS (
            SELECT
              *,
              substring(url, '/NSWOEH_[[:digit:]]+_([[:alnum:]]+)_[^/]+$') AS location,
              substring(url, '/NSWOEH_([[:digit:]]+)_[^/]+$')::date AS survey_date,
              substring(url, '_(ScientificRigour|SHP|BTY|BKS)') AS file_type
            FROM indexed_file
            WHERE NOT deleted AND url LIKE '%_MB_%'
          )
          SELECT
            f.url,
            f.location,
            f.survey_date,
            CASE f.file_type
              WHEN 'BTY' THEN 'bathymetry'
              WHEN 'BKS' THEN 'backscatter'
              WHEN 'SHP' THEN 'coverage shapefile'
              ELSE f.file_type
            END AS file_type,
            m.area,
            m.areainfo,
            m.max_res,
            m.process,
            to_char(f.survey_date, 'YYYY') as year,
            to_char(f.survey_date, 'MM') as month,
            m.comment,
            m.authority,
            m.geom
          FROM files f JOIN multibeam_survey m USING (location, survey_date)
          ORDER BY url
        ;
      </sql>
    </changeSet>


    <changeSet author="talend" id="aodn_nsw_oeh_bathy_map" runOnChange="true">
      <comment>
        Keep a copy of this view under the old name for now, so we
        don't break the layer.  This view and changeset can be removed
        once the Geoserver config and metadata record have been
        updated to point to aodn_nsw_oeh_multibeam_map.
      </comment>
      <sql>
        DROP VIEW IF EXISTS aodn_nsw_oeh_bathy_map ;

        CREATE VIEW aodn_nsw_oeh_bathy_map AS
          SELECT * FROM aodn_nsw_oeh_multibeam_map ;
        ;
      </sql>
    </changeSet>


    <changeSet author="talend" id="aodn_nsw_oeh_singlebeam_map" runOnChange="true">
      <sql>
        DROP VIEW IF EXISTS aodn_nsw_oeh_singlebeam_map CASCADE ;

        CREATE VIEW aodn_nsw_oeh_singlebeam_map AS
          WITH files AS (
            SELECT
              *,
              substring(url, '/NSWOEH_[[:digit:]]+_([[:alnum:]]+)_[^/]+$') AS location,
              substring(url, '/NSWOEH_([[:digit:]]+)_[^/]+$')::date AS survey_date
            FROM indexed_file
            WHERE NOT deleted AND url LIKE '%_STAX_%'
          )
          SELECT
            f.url,
            f.location,
            f.survey_date,
            CASE
              WHEN f.url like '%_SHP.%' THEN 'coverage shapefile'
              WHEN f.url like '%.zip'   THEN 'complete dataset'
              ELSE ''
            END AS file_type,
            m.location_name,
            m.sdate,
            m.area,
            m.source,
            m.source_xyz,
            m.est_no,
            m.category,
            m.point_num,
            m.point_dens,
            to_char(f.survey_date, 'YYYY') as year,
            to_char(f.survey_date, 'MM') as month,
            m.comments,
            m.geom
          FROM files f JOIN singlebeam_survey m USING (location, survey_date)
          ORDER BY url
        ;
      </sql>
    </changeSet>

</databaseChangeLog>
